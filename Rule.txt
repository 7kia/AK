///////////////////////////////////////////////////////////////////////////////
// Основа
<Program> ::= (<function block>)? <Name main function> <Command block>;
<Command block> ::= <Start block> <Commands> <End block>;
<Commands> ::= (<Command>)+;
<Command> ::= (<value> | <any branching> | <any loop> | <any interrupt operator> | <return function> )<Command separator>;
//
<identificator> ::= (<letter>)+ (<digit> | <letter>)* ;
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Комманды
// TODO : оператор присвоения
<value> ::= <Call function> | <Assign for variable> | <variable>   | <expression> | <literal>;

<Assign for variable> ::= ((<init variable> | <variable> )'=' (<value> | <list values>)) ;


<init variable> ::= <type initialization>  <common separator>  <identification>;
//                     		\/ Types.txt
<type initialization> ::= <Prefix type> <name type> ((<prefix const>)? <is pointer> )? ;
<is pointer> ::= <name pointer>;
<name pointer> ::= '*';

<variable> ::= ((<operator dereference>)? | (<operator refer>)?)* ( <array> | <identificator>) ;// TODO :  разыменование
<operator refer> ::= "&";
<operator dereference> ::= "*";// TODO оператор разыменования
<array> ::= <identification> ('[' <integer> ']')+;

<list values> ::= <Start block> <first value in list> (<another values in list>)* <End block>;
<first value in list> ::= <value>;
<another values in list> ::= <variable separator> <value>;

<literal> ::= <number> | <char> | <string> | <logic>; // TODO : дополнить
<any branching> ::= <usual branching> | <switch branching> ;
<any loop> ::= <loop with precondition>| <loop with postcondition> | <loop with counter> ;
///////////////////////////////////////////////////////////////////////////////


<reserve rule literal> ::= <Name main function>;
<Name main function> ::= "main";

