void - Void
bubble_sort - Identifier
( - Left paren
signed - Signed
int - Integer
* - Star
a - Identifier
, - Comma
signed - Signed
int - Integer
length - Identifier
) - Right paren

{ - Left brace

for - For
( - Left paren
signed - Signed
int - Integer
i - Identifier
= - Assign
0 - Integer
; - Semicolon
i - Identifier
< - Less
length - Identifier
- - Minus
1 - Integer
; - Semicolon
i - Identifier
++ - Increment
) - Right paren

{ - Left brace

bool - Bool
swapped - Identifier
= - Assign
false - Bool
; - Semicolon

for - For
( - Left paren
signed - Signed
int - Integer
j - Identifier
= - Assign
0 - Integer
; - Semicolon
j - Identifier
< - Less
length - Identifier
- - Minus
i - Identifier
- - Minus
1 - Integer
; - Semicolon
j - Identifier
++ - Increment
) - Right paren

{ - Left brace

if - If
( - Left paren
a - Identifier
[ - Left square brackets
j - Identifier
] - Right square brackets
> - More
a - Identifier
[ - Left square brackets
j - Identifier
+ - Plus
1 - Integer
] - Right square brackets
) - Right paren

{ - Left brace

signed - Signed
int - Integer
b - Identifier
= - Assign
a - Identifier
[ - Left square brackets
j - Identifier
] - Right square brackets
; - Semicolon

a - Identifier
[ - Left square brackets
j - Identifier
] - Right square brackets
= - Assign
a - Identifier
[ - Left square brackets
j - Identifier
+ - Plus
1 - Integer
] - Right square brackets
; - Semicolon

a - Identifier
[ - Left square brackets
j - Identifier
+ - Plus
1 - Integer
] - Right square brackets
= - Assign
b - Identifier
; - Semicolon

swapped - Identifier
= - Assign
true - Bool
; - Semicolon

} - Right brace

} - Right brace

} - Right brace


if - If
( - Left paren
! - Not operator
swapped - Identifier
) - Right paren

{ - Left brace

break - Break
; - Semicolon

} - Right brace


} - Right brace

} - Right brace


void - Void
main - Identifier
( - Left paren
) - Right paren
{ - Left brace

signed - Signed
int - Integer
arrayInt - Identifier
[ - Left square brackets
] - Right square brackets
= - Assign
{ - Left brace
2 - Integer
, - Comma
1 - Integer
, - Comma
8 - Integer
, - Comma
3 - Integer
} - Right brace
; - Semicolon

bubble_sort - Identifier
( - Left paren
arrayInt - Identifier
, - Comma
4 - Integer
) - Right paren
; - Semicolon


for - For
( - Left paren
signed - Signed
int - Integer
index - Identifier
= - Assign
0 - Integer
; - Semicolon
index - Identifier
< - Less
4 - Integer
; - Semicolon
index - Identifier
++ - Increment
) - Right paren

{ - Left brace

printf - Print
( - Left paren
arrayInt - Identifier
[ - Left square brackets
index - Identifier
] - Right square brackets
; - Semicolon

if - If
( - Left paren
index - Identifier
< - Less
( - Left paren
4 - Integer
- - Minus
1 - Integer
) - Right paren
) - Right paren

{ - Left brace

printf - Print
( - Left paren
" , " - String
) - Right paren
; - Semicolon

} - Right brace

} - Right brace

printf - Print
( - Left paren
'\n' - Char
) - Right paren
; - Semicolon

} - Right brace
