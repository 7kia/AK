
void - Void
MultiplyWithOutAMP - Identifier
( - Left paren
) - Right paren
{ - Left brace


signed - Signed
int - Integer
aMatrix - Identifier
[ - Left square brackets
3 - Integer
] - Right square brackets
[ - Left square brackets
2 - Integer
] - Right square brackets
= - Assign
{ - Left brace
{ - Left brace
1 - Integer
, - Comma
4 - Integer
} - Right brace
, - Comma
{ - Left brace
2 - Integer
, - Comma
5 - Integer
} - Right brace
, - Comma
{ - Left brace
3 - Integer
, - Comma
6 - Integer
} - Right brace
} - Right brace
; - Semicolon

signed - Signed
int - Integer
bMatrix - Identifier
[ - Left square brackets
2 - Integer
] - Right square brackets
[ - Left square brackets
3 - Integer
] - Right square brackets
= - Assign
{ - Left brace
{ - Left brace
7 - Integer
, - Comma
8 - Integer
, - Comma
9 - Integer
} - Right brace
, - Comma
{ - Left brace
10 - Integer
, - Comma
11 - Integer
, - Comma
12 - Integer
} - Right brace
} - Right brace
; - Semicolon

signed - Signed
int - Integer
product - Identifier
[ - Left square brackets
3 - Integer
] - Right square brackets
[ - Left square brackets
3 - Integer
] - Right square brackets
= - Assign
{ - Left brace
{ - Left brace
0 - Integer
, - Comma
0 - Integer
, - Comma
0 - Integer
} - Right brace
, - Comma
{ - Left brace
0 - Integer
, - Comma
0 - Integer
, - Comma
0 - Integer
} - Right brace
, - Comma
{ - Left brace
0 - Integer
, - Comma
0 - Integer
, - Comma
0 - Integer
} - Right brace
} - Right brace
; - Semicolon







for - For
( - Left paren
signed - Signed
int - Integer
row - Identifier
= - Assign
0 - Integer
; - Semicolon
row - Identifier
< - Less
3 - Integer
; - Semicolon
row - Identifier
++ - Increment
) - Right paren
{ - Left brace

for - For
( - Left paren
signed - Signed
int - Integer
col - Identifier
= - Assign
0 - Integer
; - Semicolon
col - Identifier
< - Less
3 - Integer
; - Semicolon
col - Identifier
++ - Increment
) - Right paren
{ - Left brace


for - For
( - Left paren
signed - Signed
int - Integer
inner - Identifier
= - Assign
0 - Integer
; - Semicolon
inner - Identifier
< - Less
2 - Integer
; - Semicolon
inner - Identifier
++ - Increment
) - Right paren
{ - Left brace

product - Identifier
[ - Left square brackets
row - Identifier
] - Right square brackets
[ - Left square brackets
col - Identifier
] - Right square brackets
+= - Plus assign
aMatrix - Identifier
[ - Left square brackets
row - Identifier
] - Right square brackets
[ - Left square brackets
inner - Identifier
] - Right square brackets
* - Star
bMatrix - Identifier
[ - Left square brackets
inner - Identifier
] - Right square brackets
[ - Left square brackets
col - Identifier
] - Right square brackets
; - Semicolon

} - Right brace

printf - Print
( - Left paren
product - Identifier
[ - Left square brackets
row - Identifier
] - Right square brackets
[ - Left square brackets
col - Identifier
] - Right square brackets
, - Comma
"  " - String
) - Right paren
; - Semicolon

} - Right brace

printf - Print
( - Left paren
"\n" - String
) - Right paren
; - Semicolon

} - Right brace

} - Right brace


void - Void
main - Identifier
( - Left paren
) - Right paren

{ - Left brace

MultiplyWithOutAMP - Identifier
( - Left paren
) - Right paren
; - Semicolon

} - Right brace

